{% set name = "libnpp" %}
{% set version = "12.2.5.30" %}
{% set cuda_version = "12.4" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set target_name = "x86_64-linux" %}  # [linux64]
{% set target_name = "ppc64le-linux" %}  # [ppc64le]
{% set target_name = "sbsa-linux" %}  # [aarch64]
{% set target_name = "x64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/{{ name }}/{{ platform }}/{{ name }}-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: 9062bec77b9844663692459255f35fe70cf826bce2fc8065278410fc5f27023f  # [linux64]
  sha256: 2ada6d5ec9f0a963de3bf2eb1a5e8d431a40fc4c616e1e51e04d96bbbc2604f8  # [ppc64le]
  sha256: e91905f9a23d749fb8389f8671df67f71f49401d19f955d5029c7ebc3d839f73  # [aarch64]
  sha256: 56d1a741a3c4f5c4b2fe73dd4eb104ab1defaea3382ed5a65e4b5fe202e9c5b1  # [win]

build:
  number: 2
  binary_relocation: false
  skip: true  # [osx]

test:
  requires:
    - patchelf  # [linux]
  files:
    - test-rpath.sh
  commands:
    - test -L $PREFIX/lib/libnppc.so.{{ version }}                                          # [linux]
    - test -L $PREFIX/lib/libnppc.so.{{ version.split(".")[0] }}                            # [linux]
    - test -L $PREFIX/targets/{{ target_name }}/lib/libnppc.so.{{ version.split(".")[0] }}  # [linux]
    - test -f $PREFIX/targets/{{ target_name }}/lib/libnppc.so.{{ version }}                # [linux]
    - bash test-rpath.sh                                                                    # [linux]
    - if not exist %LIBRARY_BIN%\nppc64_{{ version.split(".")[0] }}.dll exit 1              # [win]

outputs:
  - name: libnpp
    files:
      - lib/libnpp*.so.*                            # [linux]
      - targets/{{ target_name }}/lib/libnpp*.so.*  # [linux]
      - Library\bin\npp*.dll                        # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - {{ stdlib("c") }}
        - patchelf <0.18.0                      # [linux]
      host:
         - cuda-version {{ cuda_version }}
      run:
         - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    # Tests are defined at the top level, due to package/output name conflicts.
    about:
      home: https://developer.nvidia.com/npp
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: NPP native runtime libraries
      description: |
        NPP native runtime libraries
      doc_url: https://docs.nvidia.com/cuda/npp/index.html

  - name: libnpp-dev
    build:
      run_exports:
        - {{ pin_subpackage("libnpp", max_pin="x") }}
    files:
      - lib/libnpp*.so                            # [linux]
      - lib/pkgconfig                             # [linux]
      - targets/{{ target_name }}/include         # [linux]
      - targets/{{ target_name }}/lib/libnpp*.so  # [linux]
      - targets/{{ target_name }}/lib/stubs       # [linux]
      - Library\include                           # [win]
      - Library\lib                               # [win]
    requirements:
      run:
        - libnpp >={{ version }}
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - {{ stdlib("c") }}
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - {{ pin_subpackage("libnpp", exact=True) }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - libnpp-static >={{ version }}      # [linux]
    test:
      commands:
        - test -L $PREFIX/lib/libnppc.so                                  # [linux]
        - test -f $PREFIX/lib/pkgconfig/nppc*.pc                          # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/npp.h         # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/libnppc.so        # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/stubs/libnppc.so  # [linux]
        - if not exist %LIBRARY_INC%\npp.h exit 1                         # [win]
        - if not exist %LIBRARY_LIB%\nppc.lib exit 1                      # [win]
    about:
      home: https://developer.nvidia.com/npp
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: NPP native runtime libraries
      description: |
        NPP native runtime libraries
      doc_url: https://docs.nvidia.com/cuda/npp/index.html

  - name: libnpp-static
    build:
      skip: True  # [not linux]
    requirements:
      run:
        - libnpp-dev >={{ version }}
    files:
      - targets/{{ target_name }}/lib/libnpp*_static.a
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - {{ stdlib("c") }}
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -f $PREFIX/targets/{{ target_name }}/lib/libnppc_static.a
    about:
      home: https://developer.nvidia.com/npp
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: NPP native runtime libraries
      description: |
        NPP native runtime libraries
      doc_url: https://docs.nvidia.com/cuda/npp/index.html

about:
  home: https://developer.nvidia.com/npp
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_file: LICENSE
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: NPP native runtime libraries
  description: |
    NPP native runtime libraries
  doc_url: https://docs.nvidia.com/cuda/npp/index.html

extra:
  recipe-maintainers:
    - conda-forge/cuda
